{"version":3,"file":"component---src-pages-template-lifecycle-tsx-content-file-path-home-runner-work-techfar-hub-website-v-3-techfar-hub-website-v-3-tech-far-hub-content-contract-administration-modifications-mdx-6f9c131f2e720c39b581.js","mappings":"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","sources":["webpack://tech-far-hub/./content/contract-administration/modifications.mdx","webpack://tech-far-hub/./src/pages/template-lifecycle.tsx","webpack://tech-far-hub/./src/components/resources.tsx","webpack://tech-far-hub/./src/components/tag-list.tsx","webpack://tech-far-hub/./src/components/page-layout-nav.tsx","webpack://tech-far-hub/./node_modules/lodash/kebabCase.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"contract-modifications\"\n  }, \"Contract Modifications\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"key-question-if-system-requirements-are-refined-after-the-contract-has-been-awarded-how-can-an-agency-ensure-work-was-evaluated-as-part-of-the-initial-competition-and-is-not-considered-an-out-of-scope-modification-in-violation-of-far-6001c\"\n  }, \"Key Question: If system requirements are refined after the contract has been awarded, how can an agency ensure work was evaluated as part of the initial competition and is not considered an out of scope modification in violation of FAR 6.001(c)?\"), \"\\n\", React.createElement(_components.p, null, \"Contract scope is treated differently in Agile software development to permit teams to adapt to systemic and operational constraints, validated learning, and the real time feedback of users. To make sure all work during contract performance stays within scope, contracting professionals need only to link it to the Product Vision if one already exists, or to the high-level goals outlined in the \", React.createElement(_components.a, {\n    href: \"https://techfarhub.usds.gov/pre-solicitation/requirements-development/\"\n  }, \"requirements document\"), \". An example of one of these goals may be:\"), \"\\n\", React.createElement(_components.p, null, \"Goal:  Increase the timeliness, accuracy, and completeness of data available to user group X.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Top Problems to Solve\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Ease of access: e.g., address existing problems where complex SQL queries and schema knowledge is required to pull case-related data; provision data that can be analyzed through tools shared across jurisdictions, such as SAS codes, R packages, or Tableau workbooks\"), \"\\n\", React.createElement(_components.li, null, \"Timeliness: e.g., real-time access to the data in the system without affecting the application performance and reliability\"), \"\\n\", React.createElement(_components.li, null, \"Completeness: e.g., flexible data storage, consume data from integrations, metadata; geocoding\"), \"\\n\", React.createElement(_components.li, null, \"Flexibility: e.g., solve problems posed by missing data, data conflicts, new elements\"), \"\\n\", React.createElement(_components.li, null, \"Accuracy: e.g., allow users to audit and clean data easily\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"The overarching goal is general enough to allow flexibility while also specific enough to be able to discern what is or isn’t out of scope within the context of the specific project and the system being modernized. As performance requirements are continuously refined after contract award, the sprints and releases that add incremental functionality to the end product must fall within that scope.\"), \"\\n\", React.createElement(_components.p, null, \"The FAR generally requires a new contract for any work that is considered beyond scope (e.g., a “cardinal change”). Under long-standing case law, a modification falls within the scope of the original procurement if potential offerors would have reasonably anticipated such a change prior to initial award. Contracts for agile software development can satisfy this precedent by ensuring that work identified during sprint and release planning can be linked back to the Product Vision and/or high-level goals as described in the requirements document.\"), \"\\n\", React.createElement(_components.p, null, \"To give offerors a “reasonable anticipation” of this linkage, contracting officers can make clear in their \", React.createElement(_components.a, {\n    href: \"https://techfarhub.usds.gov/solicitation/contract-design/\"\n  }, \"solicitations\"), \" that Agile techniques will be used. This will alert offerors that creation and refinement of technical requirements will occur post-award using a highly-disciplined process of planning, testing and customer feedback. Furthermore, the Government should alert offerors to technical constraints (e.g., platforms) that may be applicable to the effort, and that software requirement changes are expected to be refined and managed as part of agile planning.\"), \"\\n\", React.createElement(_components.p, null, \"Language such as the following could be included in the \", React.createElement(_components.a, {\n    href: \"https://techfarhub.usds.gov/pre-solicitation/requirements-development/\"\n  }, \"requirements document\"), \" that explicitly states that the Government expects that it’s understanding of the problem space will evolve as a result of the agile development process, and that priorities could potentially shift based on that evolution:\"), \"\\n\", React.createElement(_components.p, null, \"As is customary in agile development, priorities (as they relate to the modernization of ABC system) may shift over time based on the natural evolution of the Government’s and contractor’s understanding of the problem space through continued discovery, user research, stakeholder engagement, and validated learning. These shifting priorities will be accounted for through collaboration between the Government (Product Owner, agency stakeholders, etc.) and the contractor to establish a shared understanding of the work, which will be planned for and communicated through standard agile practices such as product roadmapping, backlog prioritization and sprint planning. For example, XYZ agency may decide during performance that additional functionalities for ABC system may need to be added to the roadmap/backlog due to newly emerging real-time circumstances, at which time the Government would work with the contractor to plan for and prioritize that work. This process will be managed by the ABC system product owner at XYZ agency and achieved through a regularly updated product roadmap/backlog process in conjunction with the contractor team.\"), \"\\n\", React.createElement(_components.p, null, \"As long as the newly emerging functionalities fall within the bounds of any of the high-level goals and/or the Product Vision outlined in the requirements document, it will be within scope.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"keeping-agile-work-within-scope\"\n  }, \"Keeping Agile Work Within Scope\"), \"\\n\", React.createElement(_components.p, null, \"The mere fact that system requirements are refined to reflect the experience from completed iterations does not mean they are out of scope. However, contracting professionals should take measures to bind contract scope to guard against extraneous or non-useful features, performance delays, and budget depletion. Such measures include mutually agreed upon performance standards and a method for assessing work against these standards. Aligning the performance measurement with the Product Vision and/or defined project goals will help keep work within scope.\"), \"\\n\", React.createElement(_components.p, null, \"Service level agreements (SLA) may be used to specify the standards that working software must meet in order to be accepted by the government. This process is analogous to that used for \", React.createElement(_components.a, {\n    href: \"https://techfarhub.usds.gov/solicitation/performance-based-contracting/\"\n  }, \"performance-based acquisitions\"), \" in \", React.createElement(_components.a, {\n    href: \"https://www.acquisition.gov/far/subpart-37.6\"\n  }, \"FAR 37.6\"), \" where the Government issues a SOO defining its outcomes that allows for industry to provide innovative solutions that are measured under a quality assurance surveillance plan.\"), \"\\n\", React.createElement(_components.p, null, \"Generally speaking, the FAR requires that the Government must describe the general scope, nature, complexity and purpose of what it is acquiring so potential offers can make an informed decision as to whether they want to submit an offer. The scope should state broad goals and may also include functional areas. The Government should fix the schedule/timeframe in which the work is to be completed, so the contractor can propose the number of sprints and the work required in the sprints. If a baseline is available from prior similar work, the Government may be able to propose the set number of sprints to be completed in the schedule/timeframe.\"), \"\\n\", React.createElement(_components.p, null, \"To ensure that the prospective offerors understand the environment in which they may be working, the SOO should contain all applicable IT and environmental constraints as relevant context, including legacy software, privacy, and security requirements or policies that may impact the development of the software.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/techfar-hub-website-v3/techfar-hub-website-v3/tech-far-hub/content/contract-administration/modifications.mdx\";\nimport * as React from \"react\";\nimport PageLayoutNav from \"../components/page-layout-nav\";\nimport MDXContent from \"../components/mdxcontent\";\nimport SiteLayout from \"../components/site-layout\";\nimport {SEO} from \"../components/seo\";\nconst LifecycleInnerPage = _ref => {\n  let {data, children, pageContext} = _ref;\n  if (data.currentPage.frontmatter && data.siblings && data.currentPage.tableOfContents) {\n    return React.createElement(PageLayoutNav, {\n      frontmatter: data.currentPage.frontmatter,\n      siblings: data.siblings,\n      tableOfContents: data.currentPage.tableOfContents,\n      pageContext: pageContext,\n      useNextLink: true\n    }, React.createElement(MDXContent, null, children));\n  }\n  return React.createElement(SiteLayout, {\n    pagePath: pageContext.pagePath\n  }, React.createElement(\"h1\", null, \"Something went wrong\"));\n};\nLifecycleInnerPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(LifecycleInnerPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$currentPage;\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    frontmatter: (_data$currentPage = data.currentPage) === null || _data$currentPage === void 0 ? void 0 : _data$currentPage.frontmatter\n  });\n};\nconst query = \"2028182619\";\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { CardGroup } from \"@trussworks/react-uswds\";\nimport ResourceCard from \"./resouces-card\";\nconst Resources = () => {\n  const data: Queries.ResourcePromosQuery = useStaticQuery(graphql`\n    query ResourcePromos {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/.*/promos/resources/.*/\" }, frontmatter: { visible: { eq: true } } }\n        sort: { frontmatter: { nav_weight: ASC } }\n      ) {\n        edges {\n          node {\n            id\n            html\n            parent {\n              id\n              ... on File {\n                id\n                name\n                base\n                relativeDirectory\n                relativePath\n              }\n            }\n            frontmatter {\n              heading\n              link\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <CardGroup>\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n        return <ResourceCard node={node} key={node.id}></ResourceCard>;\n      })}\n    </CardGroup>\n  );\n};\n\nexport default Resources;\n","import { withPrefix } from \"gatsby\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { Hyperlink } from \"./hyperlink\";\n\nexport const TagList = ({ tags }: { tags: readonly (string | null)[] }): JSX.Element | null => {\n  if (tags && tags.length) {\n    const tagList = tags.map((tag) => {\n      if (tag) {\n        const urlTag = withPrefix(`/tags/${_.kebabCase(tag)}`);\n        return (\n          <Hyperlink href={urlTag} key={`tag-${tag}`}>\n            {tag}\n          </Hyperlink>\n        );\n      }\n    });\n    return (\n      <div className=\"tfh-tagBox\">\n        <h4>Tags</h4>\n        {tagList}\n      </div>\n    );\n  }\n  return null;\n};\n","import { Grid, SideNav } from \"@trussworks/react-uswds\";\nimport { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport { IPageContext } from \"../types\";\nimport Resources from \"../components/resources\";\nimport { IMinimalFrontmatter, ITOCItem } from \"../types\";\nimport { Hyperlink } from \"./hyperlink\";\nimport { TagList } from \"./tag-list\";\n\ninterface IPageLayoutNav {\n  frontmatter: IMinimalFrontmatter | null | undefined;\n  siblings: {\n    readonly nodes: readonly {\n      readonly frontmatter: IMinimalFrontmatter | null | undefined;\n      readonly parent:\n        | {}\n        | {\n            readonly name: string;\n            readonly relativePath: string;\n            readonly relativeDirectory: string;\n          }\n        | null;\n    }[];\n  };\n  tableOfContents: Record<string, ITOCItem[]>;\n  pageContext: IPageContext;\n  useNextLink: boolean;\n  showSiblings?: boolean;\n  children: React.ReactNode;\n}\n\nconst PageLayoutNav: React.FC<IPageLayoutNav> = ({\n  frontmatter,\n  siblings,\n  tableOfContents,\n  pageContext,\n  children,\n  useNextLink = false,\n  showSiblings = true,\n}: IPageLayoutNav) => {\n  const currentSlug = frontmatter?.slug;\n  const pathDepth = pageContext.pathParts.length;\n  const isTopLevel = pathDepth === 2;\n  const tocLinks = tableOfContents.items\n    ? tableOfContents.items.map((item: ITOCItem) => {\n        const tocClass = !showSiblings ? \"\" : \"font-ui-3xs\";\n        return (\n          <a href={item.url} key={item.url} className={tocClass}>\n            {item.title}\n          </a>\n        );\n      })\n    : [];\n  let atCurrent = false;\n  let nextLink = null;\n  let siblingNodes = siblings.nodes;\n  const siblingLinks = siblingNodes\n    .map((node) => {\n      if (\n        node &&\n        node.frontmatter &&\n        node.frontmatter.slug &&\n        node.frontmatter.heading &&\n        node.parent &&\n        \"relativeDirectory\" in node.parent\n      ) {\n        const actualSlug = node.frontmatter.slug === \"index\" ? \"\" : node.frontmatter.slug;\n        if (isTopLevel) {\n          // If this is a top-level page, like Get Started, we actually want first-children\n          if (\n            node.parent.relativeDirectory.startsWith(pageContext.pathParts.join(\"/\").slice(1)) &&\n            node.parent.relativePath !== pageContext.filePath\n          ) {\n            if (node.frontmatter.link) {\n              return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n            }\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          } else {\n            return null;\n          }\n        }\n\n        if (node.frontmatter.slug === currentSlug && node.parent.relativePath === pageContext.filePath) {\n          atCurrent = true;\n          return (\n            <>\n              {showSiblings && (\n                <a href=\"#\" className=\"usa-current\" key=\"current\">\n                  {node.frontmatter.heading}\n                </a>\n              )}\n              {tocLinks.length > 0 && <SideNav items={tocLinks}></SideNav>}\n            </>\n          );\n        } else if (showSiblings) {\n          if (atCurrent) {\n            if (!node.frontmatter.link) {\n              nextLink = node.frontmatter;\n            }\n            atCurrent = false;\n          }\n          if (node.frontmatter.link) {\n            return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n          } else {\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          }\n        }\n      }\n    })\n    .filter((item) => !!item);\n\n  // This is honestly for the type checker; it should be obvious\n  // that nextLink is an IMinimalFrontmatter, but not to typescript\n  if (nextLink) {\n    nextLink = nextLink as IMinimalFrontmatter;\n  }\n\n  return (\n    <SiteLayout breadCrumbs={pageContext.breadCrumbs} pagePath={pageContext.pagePath}>\n      <Grid row gap={2} className=\"margin-bottom-4\">\n        <Grid tablet={{ col: 2 }}>\n          <div className=\"position-sticky top-0\">\n            <SideNav items={siblingLinks}></SideNav>\n            {frontmatter?.tags && <TagList tags={frontmatter.tags} />}\n          </div>\n        </Grid>\n        <Grid tablet={{ col: 10 }}>\n          <h1>{frontmatter?.heading}</h1>\n          {children}\n          {useNextLink && nextLink !== null && (\n            <span className=\"tfh-next-link\">\n              <Link to={`${pageContext.parentPath}/${nextLink.slug}`}>\n                <strong>Next: {nextLink.heading}</strong>\n              </Link>\n            </span>\n          )}\n        </Grid>\n      </Grid>\n      <Grid row className=\"tfh-resources-bar\">\n        <Grid col=\"fill\">\n          <hr />\n          <h3 className=\"font-ui-xl\">Resources</h3>\n          <Resources></Resources>\n        </Grid>\n      </Grid>\n    </SiteLayout>\n  );\n};\n\nexport const query = graphql`\n  fragment minimalFrontmatter on Mdx {\n    frontmatter {\n      slug\n      heading\n      meta_title\n      meta_description\n      promo_description\n      robots\n      canonical\n      link\n      tags\n    }\n  }\n  fragment currentPageWithLocalNav on Mdx {\n    ...minimalFrontmatter\n    tableOfContents(maxDepth: 2)\n    parent {\n      ... on File {\n        name\n        relativePath\n        relativeDirectory\n      }\n    }\n  }\n`;\n\nexport default PageLayoutNav;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","p","a","strong","ul","li","_provideComponents","components","React","id","href","wrapper","MDXLayout","LifecycleInnerPage","_ref","data","children","pageContext","currentPage","frontmatter","siblings","tableOfContents","PageLayoutNav","useNextLink","MDXContent","SiteLayout","pagePath","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$currentPage","SEO","useStaticQuery","CardGroup","allMarkdownRemark","edges","map","node","ResourceCard","key","TagList","tags","length","tagList","tag","urlTag","withPrefix","_kebabCase","Hyperlink","className","showSiblings","currentSlug","slug","isTopLevel","pathParts","tocLinks","items","item","tocClass","url","title","atCurrent","nextLink","siblingLinks","nodes","heading","parent","actualSlug","relativeDirectory","startsWith","join","slice","relativePath","filePath","link","Link","to","SideNav","filter","breadCrumbs","Grid","row","gap","tablet","col","parentPath","Resources","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}