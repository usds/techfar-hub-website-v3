{"version":3,"file":"component---src-pages-template-default-tsx-content-file-path-home-runner-work-techfar-hub-website-v-3-techfar-hub-website-v-3-tech-far-hub-content-resources-learning-center-sample-language-for-government-contracts-mdx-dc98633549d12cb96496.js","mappings":"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","sources":["webpack://tech-far-hub/./content/resources/learning-center/sample-language-for-government-contracts.mdx","webpack://tech-far-hub/./src/pages/template-default.tsx","webpack://tech-far-hub/./src/components/resources.tsx","webpack://tech-far-hub/./src/components/tag-list.tsx","webpack://tech-far-hub/./src/components/page-layout-nav.tsx","webpack://tech-far-hub/./node_modules/lodash/kebabCase.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    h4: \"h4\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"scope\"\n  }, \"Scope\"), \"\\n\", React.createElement(_components.p, null, \"The goal is to implement cloud-based applications utilizing Agile processes that achieve results through continuous capability enhancements, minimal downtime, prompt response to emerging needs, demonstrated reliability, and optimized performance with resource utilization minimized. The scope of the BPA \", React.createElement(_components.strong, null, \"encompasses requirements\"), \" for [insert certification standard] expert companies to provide the business analysis, development, implementation, enhancements, and maintenance services required to successfully implement the applications within a cloud-hosted environment.  The platform will allow the user to provide an environment to build business applications.  The Government wants to provide the option of a shared, enterprise service of hosting and platform support to drive down costs, realize efficiencies and allow Agency components to focus on the application rather than hosting.  The task orders can be placed under one or all of the Functional Areas:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Business Analysis, Development Integration: creation of a technical architecture to establish business application, including development, integration with Agency’s existing systems.\"), \"\\n\", React.createElement(_components.li, null, \"Data Management and Securitization: data management may include data migration efforts, securitization with a Government provided third party Encryption tool, and creation of policy surrounding data implementation.\"), \"\\n\", React.createElement(_components.li, null, \"Program Management Support: additional support to assist in overall process.\"), \"\\n\", React.createElement(_components.li, null, \"Post-Implementation Maintenance Support: for production applications on the collaboration platform.\"), \"\\n\", React.createElement(_components.li, null, \"Post-Implementation Development: expansion or updates of production applications to meet ongoing unique objectives and requirements of specific Agency components. 6. Support: ongoing issue tracking and support desk functions for software development.\"), \"\\n\", React.createElement(_components.li, null, \"Training: end use, administrator, knowledge management support for application.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"technical-factors\"\n  }, \"Technical Factors\"), \"\\n\", React.createElement(_components.p, null, \"Technical submission should include the following: Factor 1 – Technical Approach to Agile methodology (overview of performance-based solution and quality control and performance measurement approach); Factor 2 – Method for planning and sizing of work to be performed; Factor 3 – Past Performance Information; Factor 4 – Real Technical Factors (unit testing, pair programming, test driven development, approach to refactoring, and design philosophy).\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"functional-area\"\n  }, \"Functional Area\"), \"\\n\", React.createElement(_components.p, null, \"Functional Area 1:  Business Analysis, Development, Integration - Creation of a technical architecture to establish business applications, including development, and integration with Agency’s existing systems.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The contractor shall work with Agency stakeholders and technology professionals to properly understand business requirements and develop an industry best practice approach to technology solutions.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall provide subject matter expertise for the [insert title] product suite including [insert applicable] coding languages.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall develop or configure, test, stage, and release business applications by applying iterative processes utilizing the proposed Agile methodology and a frequent release cycle.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall provide customer-friendly open source solutions that provide ease of use for non-technical Government users.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall ensure commercial best practices workflows shall come bundled with the solutions.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall design solutions that offer role or attribute based identity management, authorization, and authentication across all business applications.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall ensure all content is preserved according to federal record retention requirements and applications shall have the ability to protect personally identifiable information (PII).\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall ensure applications are developed such that response times for application end users fall within best practice levels.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall provide comprehensive documentation and information necessary to analyze processes, procedures, and/or policies that were implemented in the creation of the applications.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall provide secure mechanisms to allow data exchange and interaction with external systems.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall provide business process analysis expertise with regard to optimizing the utilization and adoption of the software platform among Government users.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall seek to configure off-the-shelf aspects of the selected platform before recommending a customized coding approach.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall develop system configuration in such a manner as to leverage maximum re-use and sharing across the platform by other federal agencies.\"), \"\\n\", React.createElement(_components.li, null, \"The contractor shall provide incremental documentation through sprint cycles that results in full technical and end-user documentation or configuration for all software development efforts and product releases with all information necessary to document processes, procedures, code artifacts, and/or policies that were implemented in the creation of the development work.\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"key-personnel\"\n  }, \"Key Personnel\"), \"\\n\", React.createElement(_components.p, null, \"The contractor shall identify key personnel and provide statements of qualifications for these individuals. Key personnel shall be current full time employees, contingent hires will not be accepted as key personnel submissions. The contractor shall identify key personnel who shall be the management lead and the technical lead for the task order as a whole. These individuals must have expertise in the Agile development methodology and experience using many of the tools included in the Development/Test Tool Suite identified previously.  The management lead shall ensure that all work on this contract complies with contract terms and conditions and shall have access to contractor corporate senior leadership when necessary. The contractor’s management lead shall be the primary interface with the Contracting Officer’s Representative (COR) and Contracting Officer (CO) and shall attend status meetings and ad hoc meetings with stakeholders as required, accompanied by the technical lead when necessary.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"pricing-and-incentives\"\n  }, \"Pricing and Incentives\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"award-term-option-solicitation\"\n  }, \"Award Term Option Solicitation\"), \"\\n\", React.createElement(_components.p, null, \"For this task order the Government will offer Award Term Options which may encompass future enhancements, releases, development efforts, or operations & maintenance related to the establishment of the platform or the application. Award Terms may only be awarded for an overall “Excellent” performance rating based on mutually accepted metrics.  The Government will appoint an Award Term Determining Official (AFDO) who will provide the official performance review and approval for an Award Term Option to be exercised.  The AFDO, in conjunction with the CO, will make a unilateral decision as to the exclusion of any portion of the performance period from the evaluation of ratings and calculation of the award term.  Award Term Options are not required to be consecutive with the previous period of performance of the base period or additional options.  They are contingent on continued Government requirements and funding availability for the platform or application.  Award Term Options must adhere to the proposed Agile methodology and processes as awarded at the BPA level unless an exception is provided by the CO prior to award.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"performance-metrics\"\n  }, \"Performance Metrics\"), \"\\n\", React.createElement(_components.p, null, \"Contract performance metrics should be relevant to the proposed methodology and should be tailored to the Agile process:\"), \"\\n\", React.createElement(_components.p, null, \"Offerors shall describe the Quality Control and Performance Measurement approach, including how proposed performance standards will be monitored, evaluated, and reported. The purpose of the notional Quality Control Plan is to provide evaluators with an understanding of how measures and metrics will be applied based on the proposed technical solution. These metrics shall cover planning, inspecting, and understanding progress under time. The metrics shall correspond with the “definition of done” as proposed in the PWS. These may include such measures as sprint/release success rates, defect resolutions, time to market, end user satisfaction, etc.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"other\"\n  }, \"Other\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"enterprise-engineering-support\"\n  }, \"Enterprise Engineering Support\"), \"\\n\", React.createElement(_components.p, null, \"The contractor shall provide capabilities engineering design to improve data interoperability, integrity, and quality for new systems and initiatives.  The scope of this contract focuses more on integrating new systems and initiatives into the enterprise.  The contractor shall evaluate commercial and Government software, freeware, shareware, tools, techniques, processes and standards.  The contractor shall deliver design specifications, technical papers, reports, analyses, recommendations, and Service Level Agreements. \", React.createElement(_components.strong, null, \"The work effort will be performed using the Agile method, with work planned in sprints, periodic sprint reviews and planning meetings and product deliverables planned as releases.\")), \"\\n\", React.createElement(_components.h4, {\n    id: \"maintenance-of-software\"\n  }, \"Maintenance of Software\"), \"\\n\", React.createElement(_components.p, null, \"The contractor shall maintain the software to include fixing defects, application software, tools, capabilities, and databases for the software applications, and related functionality in support of the user community and the Program Management Office. \", React.createElement(_components.strong, null, \"The contractor shall apply Agile and iterative development methodologies in order to provide timely capabilities to the user community.\"), \" The maintenance tasks also include maintaining system/software engineering, integration activities, system security, program lifecycle documentation, application documentation, and database documentation required for continued software support and requirements management. Target release timeframes will be conducted in 2-week iterations with releases to production at least once every two months.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/techfar-hub-website-v3/techfar-hub-website-v3/tech-far-hub/content/resources/learning-center/sample-language-for-government-contracts.mdx\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport MDXContent from \"../components/mdxcontent\";\nimport {SEO} from \"../components/seo\";\nimport PageLayoutNav from \"../components/page-layout-nav\";\nconst DefaultPageTemplate = _ref => {\n  let {data, children, pageContext} = _ref;\n  if (data.currentPage.frontmatter && data.siblings && data.currentPage.tableOfContents) {\n    return React.createElement(PageLayoutNav, {\n      frontmatter: data.currentPage.frontmatter,\n      siblings: data.siblings,\n      tableOfContents: data.currentPage.tableOfContents,\n      pageContext: pageContext,\n      useNextLink: false\n    }, React.createElement(MDXContent, null, children));\n  }\n  return React.createElement(SiteLayout, {\n    pagePath: pageContext.pagePath\n  }, React.createElement(\"h1\", null, \"Something went wrong\"));\n};\nDefaultPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DefaultPageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$currentPage;\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    frontmatter: (_data$currentPage = data.currentPage) === null || _data$currentPage === void 0 ? void 0 : _data$currentPage.frontmatter\n  });\n};\nconst query = \"2911962555\";\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { CardGroup } from \"@trussworks/react-uswds\";\nimport ResourceCard from \"./resouces-card\";\nconst Resources = () => {\n  const data: Queries.ResourcePromosQuery = useStaticQuery(graphql`\n    query ResourcePromos {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/.*/promos/resources/.*/\" }, frontmatter: { visible: { eq: true } } }\n        sort: { frontmatter: { nav_weight: ASC } }\n      ) {\n        edges {\n          node {\n            id\n            html\n            parent {\n              id\n              ... on File {\n                id\n                name\n                base\n                relativeDirectory\n                relativePath\n              }\n            }\n            frontmatter {\n              heading\n              link\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <CardGroup>\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n        return <ResourceCard node={node} key={node.id}></ResourceCard>;\n      })}\n    </CardGroup>\n  );\n};\n\nexport default Resources;\n","import { withPrefix } from \"gatsby\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { Hyperlink } from \"./hyperlink\";\n\nexport const TagList = ({ tags }: { tags: readonly (string | null)[] }): JSX.Element | null => {\n  if (tags && tags.length) {\n    const tagList = tags.map((tag) => {\n      if (tag) {\n        const urlTag = withPrefix(`/tags/${_.kebabCase(tag)}`);\n        return (\n          <Hyperlink href={urlTag} key={`tag-${tag}`}>\n            {tag}\n          </Hyperlink>\n        );\n      }\n    });\n    return (\n      <div className=\"tfh-tagBox\">\n        <h4>Tags</h4>\n        {tagList}\n      </div>\n    );\n  }\n  return null;\n};\n","import { Grid, SideNav } from \"@trussworks/react-uswds\";\nimport { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport { IPageContext } from \"../types\";\nimport Resources from \"../components/resources\";\nimport { IMinimalFrontmatter, ITOCItem } from \"../types\";\nimport { Hyperlink } from \"./hyperlink\";\nimport { TagList } from \"./tag-list\";\n\ninterface IPageLayoutNav {\n  frontmatter: IMinimalFrontmatter | null | undefined;\n  siblings: {\n    readonly nodes: readonly {\n      readonly frontmatter: IMinimalFrontmatter | null | undefined;\n      readonly parent:\n        | {}\n        | {\n            readonly name: string;\n            readonly relativePath: string;\n            readonly relativeDirectory: string;\n          }\n        | null;\n    }[];\n  };\n  tableOfContents: Record<string, ITOCItem[]>;\n  pageContext: IPageContext;\n  useNextLink: boolean;\n  showSiblings?: boolean;\n  children: React.ReactNode;\n}\n\nconst PageLayoutNav: React.FC<IPageLayoutNav> = ({\n  frontmatter,\n  siblings,\n  tableOfContents,\n  pageContext,\n  children,\n  useNextLink = false,\n  showSiblings = true,\n}: IPageLayoutNav) => {\n  const currentSlug = frontmatter?.slug;\n  const pathDepth = pageContext.pathParts.length;\n  const isTopLevel = pathDepth === 2;\n  const tocLinks = tableOfContents.items\n    ? tableOfContents.items.map((item: ITOCItem) => {\n        const tocClass = !showSiblings ? \"\" : \"font-ui-3xs\";\n        return (\n          <a href={item.url} key={item.url} className={tocClass}>\n            {item.title}\n          </a>\n        );\n      })\n    : [];\n  let atCurrent = false;\n  let nextLink = null;\n  let siblingNodes = siblings.nodes;\n  const siblingLinks = siblingNodes\n    .map((node) => {\n      if (\n        node &&\n        node.frontmatter &&\n        node.frontmatter.slug &&\n        node.frontmatter.heading &&\n        node.parent &&\n        \"relativeDirectory\" in node.parent\n      ) {\n        const actualSlug = node.frontmatter.slug === \"index\" ? \"\" : node.frontmatter.slug;\n        if (isTopLevel) {\n          // If this is a top-level page, like Get Started, we actually want first-children\n          if (\n            node.parent.relativeDirectory.startsWith(pageContext.pathParts.join(\"/\").slice(1)) &&\n            node.parent.relativePath !== pageContext.filePath\n          ) {\n            if (node.frontmatter.link) {\n              return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n            }\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          } else {\n            return null;\n          }\n        }\n\n        if (node.frontmatter.slug === currentSlug && node.parent.relativePath === pageContext.filePath) {\n          atCurrent = true;\n          return (\n            <>\n              {showSiblings && (\n                <a href=\"#\" className=\"usa-current\" key=\"current\">\n                  {node.frontmatter.heading}\n                </a>\n              )}\n              {tocLinks.length > 0 && <SideNav items={tocLinks}></SideNav>}\n            </>\n          );\n        } else if (showSiblings) {\n          if (atCurrent) {\n            if (!node.frontmatter.link) {\n              nextLink = node.frontmatter;\n            }\n            atCurrent = false;\n          }\n          if (node.frontmatter.link) {\n            return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n          } else {\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          }\n        }\n      }\n    })\n    .filter((item) => !!item);\n\n  // This is honestly for the type checker; it should be obvious\n  // that nextLink is an IMinimalFrontmatter, but not to typescript\n  if (nextLink) {\n    nextLink = nextLink as IMinimalFrontmatter;\n  }\n\n  return (\n    <SiteLayout breadCrumbs={pageContext.breadCrumbs} pagePath={pageContext.pagePath}>\n      <Grid row gap={2} className=\"margin-bottom-4\">\n        <Grid tablet={{ col: 2 }}>\n          <div className=\"position-sticky top-0\">\n            <SideNav items={siblingLinks}></SideNav>\n            {frontmatter?.tags && <TagList tags={frontmatter.tags} />}\n          </div>\n        </Grid>\n        <Grid tablet={{ col: 10 }}>\n          <h1>{frontmatter?.heading}</h1>\n          {children}\n          {useNextLink && nextLink !== null && (\n            <span className=\"tfh-next-link\">\n              <Link to={`${pageContext.parentPath}/${nextLink.slug}`}>\n                <strong>Next: {nextLink.heading}</strong>\n              </Link>\n            </span>\n          )}\n        </Grid>\n      </Grid>\n      <Grid row className=\"tfh-resources-bar\">\n        <Grid col=\"fill\">\n          <hr />\n          <h3 className=\"font-ui-xl\">Resources</h3>\n          <Resources></Resources>\n        </Grid>\n      </Grid>\n    </SiteLayout>\n  );\n};\n\nexport const query = graphql`\n  fragment minimalFrontmatter on Mdx {\n    frontmatter {\n      slug\n      heading\n      meta_title\n      meta_description\n      promo_description\n      robots\n      canonical\n      link\n      tags\n    }\n  }\n  fragment currentPageWithLocalNav on Mdx {\n    ...minimalFrontmatter\n    tableOfContents(maxDepth: 2)\n    parent {\n      ... on File {\n        name\n        relativePath\n        relativeDirectory\n      }\n    }\n  }\n`;\n\nexport default PageLayoutNav;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","strong","ol","li","h3","h4","ul","_provideComponents","components","React","id","wrapper","MDXLayout","DefaultPageTemplate","_ref","data","children","pageContext","currentPage","frontmatter","siblings","tableOfContents","PageLayoutNav","useNextLink","MDXContent","SiteLayout","pagePath","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$currentPage","SEO","useStaticQuery","CardGroup","allMarkdownRemark","edges","map","node","ResourceCard","key","TagList","tags","length","tagList","tag","urlTag","withPrefix","_kebabCase","Hyperlink","href","className","showSiblings","currentSlug","slug","isTopLevel","pathParts","tocLinks","items","item","tocClass","url","title","atCurrent","nextLink","siblingLinks","nodes","heading","parent","actualSlug","relativeDirectory","startsWith","join","slice","relativePath","filePath","link","Link","to","SideNav","filter","breadCrumbs","Grid","row","gap","tablet","col","parentPath","Resources","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}