{"version":3,"file":"component---src-pages-template-default-tsx-content-file-path-home-runner-work-techfar-hub-website-v-3-techfar-hub-website-v-3-tech-far-hub-content-resources-templates-samples-agile-team-estimator-mdx-eb8dfc56f8d00437581a.js","mappings":"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","sources":["webpack://tech-far-hub/./content/resources/templates-samples/agile-team-estimator.mdx","webpack://tech-far-hub/./src/pages/template-default.tsx","webpack://tech-far-hub/./src/components/resources.tsx","webpack://tech-far-hub/./src/components/tag-list.tsx","webpack://tech-far-hub/./src/components/page-layout-nav.tsx","webpack://tech-far-hub/./node_modules/lodash/kebabCase.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"agile-team-estimator-and-independent-government-cost-estimate-igce\"\n  }, \"Agile Team Estimator and Independent Government Cost Estimate (IGCE)\"), \"\\n\", React.createElement(_components.p, null, \"This agile team estimator worksheet is a tool to help calculate an Independent Government Cost Estimate (IGCE) for pricing out iterative development efforts, such as Agile software development services. It focuses on pricing out capacity per team based on a unit of work that is defined as an iteration. Use the information below to help understand how to use the tool and the data from it.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"/assets/files/Template%20IGCE%20-%20Agile%20Team%20Estimator.xlsx\"\n  }, \"Download worksheet\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/techfar-hub-website-v3/techfar-hub-website-v3/tech-far-hub/content/resources/templates-samples/agile-team-estimator.mdx\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport MDXContent from \"../components/mdxcontent\";\nimport {SEO} from \"../components/seo\";\nimport PageLayoutNav from \"../components/page-layout-nav\";\nconst DefaultPageTemplate = _ref => {\n  let {data, children, pageContext} = _ref;\n  if (data.currentPage.frontmatter && data.siblings && data.currentPage.tableOfContents) {\n    return React.createElement(PageLayoutNav, {\n      frontmatter: data.currentPage.frontmatter,\n      siblings: data.siblings,\n      tableOfContents: data.currentPage.tableOfContents,\n      pageContext: pageContext,\n      useNextLink: false\n    }, React.createElement(MDXContent, null, children));\n  }\n  return React.createElement(SiteLayout, {\n    pagePath: pageContext.pagePath\n  }, React.createElement(\"h1\", null, \"Something went wrong\"));\n};\nDefaultPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DefaultPageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$currentPage;\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    frontmatter: (_data$currentPage = data.currentPage) === null || _data$currentPage === void 0 ? void 0 : _data$currentPage.frontmatter\n  });\n};\nconst query = \"2911962555\";\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { CardGroup } from \"@trussworks/react-uswds\";\nimport ResourceCard from \"./resouces-card\";\nconst Resources = () => {\n  const data: Queries.ResourcePromosQuery = useStaticQuery(graphql`\n    query ResourcePromos {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/.*/promos/resources/.*/\" }, frontmatter: { visible: { eq: true } } }\n        sort: { frontmatter: { nav_weight: ASC } }\n      ) {\n        edges {\n          node {\n            id\n            html\n            parent {\n              id\n              ... on File {\n                id\n                name\n                base\n                relativeDirectory\n                relativePath\n              }\n            }\n            frontmatter {\n              heading\n              link\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <CardGroup>\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n        return <ResourceCard node={node} key={node.id}></ResourceCard>;\n      })}\n    </CardGroup>\n  );\n};\n\nexport default Resources;\n","import { withPrefix } from \"gatsby\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { Hyperlink } from \"./hyperlink\";\n\nexport const TagList = ({ tags }: { tags: readonly (string | null)[] }): JSX.Element | null => {\n  if (tags && tags.length) {\n    const tagList = tags.map((tag) => {\n      if (tag) {\n        const urlTag = withPrefix(`/tags/${_.kebabCase(tag)}`);\n        return (\n          <Hyperlink href={urlTag} key={`tag-${tag}`}>\n            {tag}\n          </Hyperlink>\n        );\n      }\n    });\n    return (\n      <div className=\"tfh-tagBox\">\n        <h4>Tags</h4>\n        {tagList}\n      </div>\n    );\n  }\n  return null;\n};\n","import { Grid, SideNav } from \"@trussworks/react-uswds\";\nimport { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport { IPageContext } from \"../types\";\nimport Resources from \"../components/resources\";\nimport { IMinimalFrontmatter, ITOCItem } from \"../types\";\nimport { Hyperlink } from \"./hyperlink\";\nimport { TagList } from \"./tag-list\";\n\ninterface IPageLayoutNav {\n  frontmatter: IMinimalFrontmatter | null | undefined;\n  siblings: {\n    readonly nodes: readonly {\n      readonly frontmatter: IMinimalFrontmatter | null | undefined;\n      readonly parent:\n        | {}\n        | {\n            readonly name: string;\n            readonly relativePath: string;\n            readonly relativeDirectory: string;\n          }\n        | null;\n    }[];\n  };\n  tableOfContents: Record<string, ITOCItem[]>;\n  pageContext: IPageContext;\n  useNextLink: boolean;\n  showSiblings?: boolean;\n  children: React.ReactNode;\n}\n\nconst PageLayoutNav: React.FC<IPageLayoutNav> = ({\n  frontmatter,\n  siblings,\n  tableOfContents,\n  pageContext,\n  children,\n  useNextLink = false,\n  showSiblings = true,\n}: IPageLayoutNav) => {\n  const currentSlug = frontmatter?.slug;\n  const pathDepth = pageContext.pathParts.length;\n  const isTopLevel = pathDepth === 2;\n  const tocLinks = tableOfContents.items\n    ? tableOfContents.items.map((item: ITOCItem) => {\n        const tocClass = !showSiblings ? \"\" : \"font-ui-3xs\";\n        return (\n          <a href={item.url} key={item.url} className={tocClass}>\n            {item.title}\n          </a>\n        );\n      })\n    : [];\n  let atCurrent = false;\n  let nextLink = null;\n  let siblingNodes = siblings.nodes;\n  const siblingLinks = siblingNodes\n    .map((node) => {\n      if (\n        node &&\n        node.frontmatter &&\n        node.frontmatter.slug &&\n        node.frontmatter.heading &&\n        node.parent &&\n        \"relativeDirectory\" in node.parent\n      ) {\n        const actualSlug = node.frontmatter.slug === \"index\" ? \"\" : node.frontmatter.slug;\n        if (isTopLevel) {\n          // If this is a top-level page, like Get Started, we actually want first-children\n          if (\n            node.parent.relativeDirectory.startsWith(pageContext.pathParts.join(\"/\").slice(1)) &&\n            node.parent.relativePath !== pageContext.filePath\n          ) {\n            if (node.frontmatter.link) {\n              return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n            }\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          } else {\n            return null;\n          }\n        }\n\n        if (node.frontmatter.slug === currentSlug && node.parent.relativePath === pageContext.filePath) {\n          atCurrent = true;\n          return (\n            <>\n              {showSiblings && (\n                <a href=\"#\" className=\"usa-current\" key=\"current\">\n                  {node.frontmatter.heading}\n                </a>\n              )}\n              {tocLinks.length > 0 && <SideNav items={tocLinks}></SideNav>}\n            </>\n          );\n        } else if (showSiblings) {\n          if (atCurrent) {\n            if (!node.frontmatter.link) {\n              nextLink = node.frontmatter;\n            }\n            atCurrent = false;\n          }\n          if (node.frontmatter.link) {\n            return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n          } else {\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          }\n        }\n      }\n    })\n    .filter((item) => !!item);\n\n  // This is honestly for the type checker; it should be obvious\n  // that nextLink is an IMinimalFrontmatter, but not to typescript\n  if (nextLink) {\n    nextLink = nextLink as IMinimalFrontmatter;\n  }\n\n  return (\n    <SiteLayout breadCrumbs={pageContext.breadCrumbs} pagePath={pageContext.pagePath}>\n      <Grid row gap={2} className=\"margin-bottom-4\">\n        <Grid tablet={{ col: 2 }}>\n          <div className=\"position-sticky top-0\">\n            <SideNav items={siblingLinks}></SideNav>\n            {frontmatter?.tags && <TagList tags={frontmatter.tags} />}\n          </div>\n        </Grid>\n        <Grid tablet={{ col: 10 }}>\n          <h1>{frontmatter?.heading}</h1>\n          {children}\n          {useNextLink && nextLink !== null && (\n            <span className=\"tfh-next-link\">\n              <Link to={`${pageContext.parentPath}/${nextLink.slug}`}>\n                <strong>Next: {nextLink.heading}</strong>\n              </Link>\n            </span>\n          )}\n        </Grid>\n      </Grid>\n      <Grid row className=\"tfh-resources-bar\">\n        <Grid col=\"fill\">\n          <hr />\n          <h3 className=\"font-ui-xl\">Resources</h3>\n          <Resources></Resources>\n        </Grid>\n      </Grid>\n    </SiteLayout>\n  );\n};\n\nexport const query = graphql`\n  fragment minimalFrontmatter on Mdx {\n    frontmatter {\n      slug\n      heading\n      meta_title\n      meta_description\n      promo_description\n      robots\n      canonical\n      link\n      tags\n    }\n  }\n  fragment currentPageWithLocalNav on Mdx {\n    ...minimalFrontmatter\n    tableOfContents(maxDepth: 2)\n    parent {\n      ... on File {\n        name\n        relativePath\n        relativeDirectory\n      }\n    }\n  }\n`;\n\nexport default PageLayoutNav;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","_provideComponents","components","React","id","href","wrapper","MDXLayout","DefaultPageTemplate","_ref","data","children","pageContext","currentPage","frontmatter","siblings","tableOfContents","PageLayoutNav","useNextLink","MDXContent","SiteLayout","pagePath","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$currentPage","SEO","useStaticQuery","CardGroup","allMarkdownRemark","edges","map","node","ResourceCard","key","TagList","tags","length","tagList","tag","urlTag","withPrefix","_kebabCase","Hyperlink","className","showSiblings","currentSlug","slug","isTopLevel","pathParts","tocLinks","items","item","tocClass","url","title","atCurrent","nextLink","siblingLinks","nodes","heading","parent","actualSlug","relativeDirectory","startsWith","join","slice","relativePath","filePath","link","Link","to","SideNav","filter","breadCrumbs","Grid","row","gap","tablet","col","parentPath","Resources","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}