{"version":3,"file":"component---src-pages-template-default-tsx-content-file-path-home-runner-work-techfar-hub-website-v-3-techfar-hub-website-v-3-tech-far-hub-content-how-to-contribute-index-mdx-660d02a29a594f586f4f.js","mappings":"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","sources":["webpack://tech-far-hub/./content/how-to-contribute/index.mdx","webpack://tech-far-hub/./src/pages/template-default.tsx","webpack://tech-far-hub/./src/components/resources.tsx","webpack://tech-far-hub/./src/components/tag-list.tsx","webpack://tech-far-hub/./src/components/page-layout-nav.tsx","webpack://tech-far-hub/./node_modules/lodash/kebabCase.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"If you are familiar with the process of contributing to TechFAR Hub and understand the guidelines, \", React.createElement(_components.a, {\n    href: \"#what-is-the-process-of-contributing-to-techfar-hub\"\n  }, \"you may jump to the contribution instructions provided below on this page\"), \". If this is your first time contributing, we recommend you read this page carefully.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"why-contribute-to-tfh\"\n  }, \"Why Contribute to TFH?\"), \"\\n\", React.createElement(_components.p, null, \"Our goal with the TechFAR Hub is to compile the best resources available to help government contracting and program professionals succeed with digital services contracts. While the TechFAR Hub includes productive best practices and content from trusted sources, we recognize there are many ways to structure contracts and the methods available to individual teams are constrained by the reality of their operating conditions.\"), \"\\n\", React.createElement(_components.p, null, \"It is our hope that TechFAR Hub may offer guidance and best practices that contracting and program teams can adapt to their own unique conditions. And when teams do adapt material to their specific circumstances, we hope they consider sharing it back with the broader community through contribution to the TechFAR Hub.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"what-types-of-contributions-are-accepted\"\n  }, \"What Types of Contributions Are Accepted?\"), \"\\n\", React.createElement(_components.p, null, \"We are interested in any content updates, case studies, best practices, samples and templates that exist to enable improved delivery of digital services. While the USDS hosts the TechFAR Hub, we see ourselves as part of a broader community that is constantly learning and experimenting. As a community member, we hope to curate and amplify all information that may help practitioners solve problems and produce better contracting outcomes.\"), \"\\n\", React.createElement(_components.p, null, \"Specifically, we believe this comes from demonstrated use cases where specific techniques have yielded validated learning. Validated learning means that a technique was attempted in the real world, and the results of that attempt can provide utility to others who may wish to try it. Validated learning is agnostic to the success or efficacy of the technique; even a technique that did not produce the desired outcomes can be useful, provided that retrospective analysis identifies why the desired outcomes were not produced.\"), \"\\n\", React.createElement(_components.p, null, \"We will not limit contributions to specific contract actions. Process improvements, unique interpretations of standard practice, and flexibilities found within the existing Federal Acquisition Regulations are strongly encouraged. This is especially the case if they can be replicated across the government, or provide validated learning that can inform future modifications to a given technique.\"), \"\\n\", React.createElement(_components.p, null, \"It is presumed the guidance within the TechFAR Hub may not be the only guidance appropriate for a given scenario. Or, it may be at odds with certain local practices, or become out of date as new policy and guidance is released. Should you encounter such scenarios, contributions to annotate, qualify, or suggest updates to such content are highly encouraged.\"), \"\\n\", React.createElement(_components.p, null, \"Below are some examples of content contributions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"case-studies\"\n  }, \"Case Studies\"), \"\\n\", React.createElement(_components.p, null, \"Case studies are a great way to contribute validated learning to the TechFAR Hub. They do not have to be long; in fact, we encourage brevity and \", React.createElement(_components.a, {\n    href: \"/assets/files/tfh-case-study-template.xlsx\"\n  }, \"have created a short template\"), \" to guide your contribution. The template focuses on the problem you solved, the challenges that you faced in solving it, and how your solution was applied and justified by policy, law or regulation.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"policy-and-guidance\"\n  }, \"Policy and Guidance\"), \"\\n\", React.createElement(_components.p, null, \"Are you aware of any new policy or guidance that informs how digital service contracts should be designed, awarded and administered? Please let us know by providing a link to the artifact and brief context about how it informs digital service contracts.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"templates--samples\"\n  }, \"Templates & Samples\"), \"\\n\", React.createElement(_components.p, null, \"Templates and samples are great ways to support replication of your techniques in the real world. A template or sample can consist of an acquisition strategy, solicitation, quality assurance plan, scope of work, or evaluation strategy. Please ensure that you remove any mission sensitive or proprietary business information from your contributions.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"contract-solutions--vehicles\"\n  }, \"Contract Solutions & Vehicles\"), \"\\n\", React.createElement(_components.p, null, \"Have you or your agency executed a multi agency or multiple award contract that others can use for streamlined acquisition? Contribute it to the TechFAR Hub along with instructions about who can use it and how they can use it. Examples include government wide acquisition contracts, interagency contracts, and enterprise-wide indefinite delivery contracts.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"what-is-the-process-of-contributing-to-techfar-hub\"\n  }, \"What is the Process of Contributing to TechFAR Hub?\"), \"\\n\", React.createElement(_components.p, null, \"Anyone can suggest a change or contribute new content to TechFAR Hub, however you as the contributor are responsible for ensuring that what you contribute is permissible under any agency procedures that may be relevant.\"), \"\\n\", React.createElement(_components.p, null, \"There are three ways to contribute:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/usds/techfar-hub-website-v3/issues\"\n  }, \"Open a ticket\"), \" and let us know what you think should be changed\"), \"\\n\", React.createElement(_components.li, null, \"If you're at USDS, read the \", React.createElement(_components.a, {\n    href: \"https://github.com/usds/techfar-hub-website-v3/tree/main/How-To-Update\"\n  }, \"how to update\"), \" documentation and create a pull request\"), \"\\n\", React.createElement(_components.li, null, \"Click the blue \\\"Help improve this site\\\" at the bottom of every page of this site\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"We are always interested in contributions of examples, case studies, new policies, and useful material from around the web, so please do let us know if you see any places for updates, changes, or additional resources.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"what-happens-after-i-contribute-content\"\n  }, \"What Happens After I Contribute Content?\"), \"\\n\", React.createElement(_components.p, null, \"A team from the USDS Procurement Community of Practice will review your submission for technical accuracy, appropriateness, and duplication. When recommending changes to existing text, we will ensure that suggested changes do not conflict with current law, policy, or regulation. We may accept changes as additions to the content, and identify these additions as user generated or “original research” to convey that it should be internally validated before used in formal contract actions.\"), \"\\n\", React.createElement(_components.p, null, \"Make sure to provide contact information along with your submission, so that we may contact you if any clarification is required.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/techfar-hub-website-v3/techfar-hub-website-v3/tech-far-hub/content/how-to-contribute/index.mdx\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport MDXContent from \"../components/mdxcontent\";\nimport {SEO} from \"../components/seo\";\nimport PageLayoutNav from \"../components/page-layout-nav\";\nconst DefaultPageTemplate = _ref => {\n  let {data, children, pageContext} = _ref;\n  if (data.currentPage.frontmatter && data.siblings && data.currentPage.tableOfContents) {\n    return React.createElement(PageLayoutNav, {\n      frontmatter: data.currentPage.frontmatter,\n      siblings: data.siblings,\n      tableOfContents: data.currentPage.tableOfContents,\n      pageContext: pageContext,\n      useNextLink: false\n    }, React.createElement(MDXContent, null, children));\n  }\n  return React.createElement(SiteLayout, {\n    pagePath: pageContext.pagePath\n  }, React.createElement(\"h1\", null, \"Something went wrong\"));\n};\nDefaultPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DefaultPageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$currentPage;\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    frontmatter: (_data$currentPage = data.currentPage) === null || _data$currentPage === void 0 ? void 0 : _data$currentPage.frontmatter\n  });\n};\nconst query = \"2911962555\";\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { CardGroup } from \"@trussworks/react-uswds\";\nimport ResourceCard from \"./resouces-card\";\nconst Resources = () => {\n  const data: Queries.ResourcePromosQuery = useStaticQuery(graphql`\n    query ResourcePromos {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/.*/promos/resources/.*/\" }, frontmatter: { visible: { eq: true } } }\n        sort: { frontmatter: { nav_weight: ASC } }\n      ) {\n        edges {\n          node {\n            id\n            html\n            parent {\n              id\n              ... on File {\n                id\n                name\n                base\n                relativeDirectory\n                relativePath\n              }\n            }\n            frontmatter {\n              heading\n              link\n            }\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <CardGroup>\n      {data.allMarkdownRemark.edges.map(({ node }) => {\n        return <ResourceCard node={node} key={node.id}></ResourceCard>;\n      })}\n    </CardGroup>\n  );\n};\n\nexport default Resources;\n","import { withPrefix } from \"gatsby\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { Hyperlink } from \"./hyperlink\";\n\nexport const TagList = ({ tags }: { tags: readonly (string | null)[] }): JSX.Element | null => {\n  if (tags && tags.length) {\n    const tagList = tags.map((tag) => {\n      if (tag) {\n        const urlTag = withPrefix(`/tags/${_.kebabCase(tag)}`);\n        return (\n          <Hyperlink href={urlTag} key={`tag-${tag}`}>\n            {tag}\n          </Hyperlink>\n        );\n      }\n    });\n    return (\n      <div className=\"tfh-tagBox\">\n        <h4>Tags</h4>\n        {tagList}\n      </div>\n    );\n  }\n  return null;\n};\n","import { Grid, SideNav } from \"@trussworks/react-uswds\";\nimport { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport SiteLayout from \"../components/site-layout\";\nimport { IPageContext } from \"../types\";\nimport Resources from \"../components/resources\";\nimport { IMinimalFrontmatter, ITOCItem } from \"../types\";\nimport { Hyperlink } from \"./hyperlink\";\nimport { TagList } from \"./tag-list\";\n\ninterface IPageLayoutNav {\n  frontmatter: IMinimalFrontmatter | null | undefined;\n  siblings: {\n    readonly nodes: readonly {\n      readonly frontmatter: IMinimalFrontmatter | null | undefined;\n      readonly parent:\n        | {}\n        | {\n            readonly name: string;\n            readonly relativePath: string;\n            readonly relativeDirectory: string;\n          }\n        | null;\n    }[];\n  };\n  tableOfContents: Record<string, ITOCItem[]>;\n  pageContext: IPageContext;\n  useNextLink: boolean;\n  showSiblings?: boolean;\n  children: React.ReactNode;\n}\n\nconst PageLayoutNav: React.FC<IPageLayoutNav> = ({\n  frontmatter,\n  siblings,\n  tableOfContents,\n  pageContext,\n  children,\n  useNextLink = false,\n  showSiblings = true,\n}: IPageLayoutNav) => {\n  const currentSlug = frontmatter?.slug;\n  const pathDepth = pageContext.pathParts.length;\n  const isTopLevel = pathDepth === 2;\n  const tocLinks = tableOfContents.items\n    ? tableOfContents.items.map((item: ITOCItem) => {\n        const tocClass = !showSiblings ? \"\" : \"font-ui-3xs\";\n        return (\n          <a href={item.url} key={item.url} className={tocClass}>\n            {item.title}\n          </a>\n        );\n      })\n    : [];\n  let atCurrent = false;\n  let nextLink = null;\n  let siblingNodes = siblings.nodes;\n  const siblingLinks = siblingNodes\n    .map((node) => {\n      if (\n        node &&\n        node.frontmatter &&\n        node.frontmatter.slug &&\n        node.frontmatter.heading &&\n        node.parent &&\n        \"relativeDirectory\" in node.parent\n      ) {\n        const actualSlug = node.frontmatter.slug === \"index\" ? \"\" : node.frontmatter.slug;\n        if (isTopLevel) {\n          // If this is a top-level page, like Get Started, we actually want first-children\n          if (\n            node.parent.relativeDirectory.startsWith(pageContext.pathParts.join(\"/\").slice(1)) &&\n            node.parent.relativePath !== pageContext.filePath\n          ) {\n            if (node.frontmatter.link) {\n              return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n            }\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          } else {\n            return null;\n          }\n        }\n\n        if (node.frontmatter.slug === currentSlug && node.parent.relativePath === pageContext.filePath) {\n          atCurrent = true;\n          return (\n            <>\n              {showSiblings && (\n                <a href=\"#\" className=\"usa-current\" key=\"current\">\n                  {node.frontmatter.heading}\n                </a>\n              )}\n              {tocLinks.length > 0 && <SideNav items={tocLinks}></SideNav>}\n            </>\n          );\n        } else if (showSiblings) {\n          if (atCurrent) {\n            if (!node.frontmatter.link) {\n              nextLink = node.frontmatter;\n            }\n            atCurrent = false;\n          }\n          if (node.frontmatter.link) {\n            return <Hyperlink href={node.frontmatter.link}>{node.frontmatter.heading}</Hyperlink>;\n          } else {\n            return <Link to={`/${node.parent.relativeDirectory}/${actualSlug}`}>{node.frontmatter.heading}</Link>;\n          }\n        }\n      }\n    })\n    .filter((item) => !!item);\n\n  // This is honestly for the type checker; it should be obvious\n  // that nextLink is an IMinimalFrontmatter, but not to typescript\n  if (nextLink) {\n    nextLink = nextLink as IMinimalFrontmatter;\n  }\n\n  return (\n    <SiteLayout breadCrumbs={pageContext.breadCrumbs} pagePath={pageContext.pagePath}>\n      <Grid row gap={2} className=\"margin-bottom-4\">\n        <Grid tablet={{ col: 2 }}>\n          <div className=\"position-sticky top-0\">\n            <SideNav items={siblingLinks}></SideNav>\n            {frontmatter?.tags && <TagList tags={frontmatter.tags} />}\n          </div>\n        </Grid>\n        <Grid tablet={{ col: 10 }}>\n          <h1>{frontmatter?.heading}</h1>\n          {children}\n          {useNextLink && nextLink !== null && (\n            <span className=\"tfh-next-link\">\n              <Link to={`${pageContext.parentPath}/${nextLink.slug}`}>\n                <strong>Next: {nextLink.heading}</strong>\n              </Link>\n            </span>\n          )}\n        </Grid>\n      </Grid>\n      <Grid row className=\"tfh-resources-bar\">\n        <Grid col=\"fill\">\n          <hr />\n          <h3 className=\"font-ui-xl\">Resources</h3>\n          <Resources></Resources>\n        </Grid>\n      </Grid>\n    </SiteLayout>\n  );\n};\n\nexport const query = graphql`\n  fragment minimalFrontmatter on Mdx {\n    frontmatter {\n      slug\n      heading\n      meta_title\n      meta_description\n      promo_description\n      robots\n      canonical\n      link\n      tags\n    }\n  }\n  fragment currentPageWithLocalNav on Mdx {\n    ...minimalFrontmatter\n    tableOfContents(maxDepth: 2)\n    parent {\n      ... on File {\n        name\n        relativePath\n        relativeDirectory\n      }\n    }\n  }\n`;\n\nexport default PageLayoutNav;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","h3","ul","li","_provideComponents","components","React","href","id","wrapper","MDXLayout","DefaultPageTemplate","_ref","data","children","pageContext","currentPage","frontmatter","siblings","tableOfContents","PageLayoutNav","useNextLink","MDXContent","SiteLayout","pagePath","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$currentPage","SEO","useStaticQuery","CardGroup","allMarkdownRemark","edges","map","node","ResourceCard","key","TagList","tags","length","tagList","tag","urlTag","withPrefix","_kebabCase","Hyperlink","className","showSiblings","currentSlug","slug","isTopLevel","pathParts","tocLinks","items","item","tocClass","url","title","atCurrent","nextLink","siblingLinks","nodes","heading","parent","actualSlug","relativeDirectory","startsWith","join","slice","relativePath","filePath","link","Link","to","SideNav","filter","breadCrumbs","Grid","row","gap","tablet","col","parentPath","Resources","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"sourceRoot":""}