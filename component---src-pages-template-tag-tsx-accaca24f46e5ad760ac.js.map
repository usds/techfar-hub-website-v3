{"version":3,"file":"component---src-pages-template-tag-tsx-accaca24f46e5ad760ac.js","mappings":"qMAsDA,UAzCyFA,IAG5B,IAH6B,KACxFC,EAAI,YACJC,GACsD,EACtD,MAAMC,EAAeF,EAAKG,MAAMC,MAAMC,KAAKC,IACzC,IAAIC,EACJ,GAAID,EAAKE,aAAeF,EAAKG,OAAQ,SACnC,GAAIH,EAAKE,YAAYE,KACnBH,EAAOD,EAAKE,YAAYE,SACnB,CACL,MAAMC,EAAiC,UAA1BL,EAAKE,YAAYG,KAAmB,GAAKL,EAAKE,YAAYG,KAEvEJ,EAAO,KADI,sBAAuBD,EAAKG,OAASH,EAAKG,OAAOG,kBAAoB,IACjE,IAAID,EAAI,GACzB,CACA,OACEE,EAAAA,cAACC,EAAAA,KAAI,KACHD,EAAAA,cAACE,EAAAA,WAAU,KACTF,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACG,EAAAA,EAAS,CAACT,KAAMA,GAAuB,QAAlB,EAAED,EAAKE,mBAAW,aAAhBS,EAAkBC,WAG9CL,EAAAA,cAACM,EAAAA,SAAQ,KAAkB,QAAlB,EAAEb,EAAKE,mBAAW,aAAhBY,EAAkBC,mBAC7BR,EAAAA,cAACS,EAAAA,WAAU,KACTT,EAAAA,cAACG,EAAAA,EAAS,CAACT,KAAMA,EAAMgB,UAAU,cAAa,cAMtD,KAEF,OACEV,EAAAA,cAACW,EAAAA,EAAU,CAACC,SAAUxB,EAAYwB,UAChCZ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,WAASZ,EAAYyB,KACxBxB,GAEQ,EAKV,MAwBMyB,EAA2DC,IAIlE,IAJmE,YACvE3B,GAGD,EACC,OACEY,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAO,iBAAeZ,EAAYyB,IAAI,6BACtCb,EAAAA,cAAAA,OAAAA,CAAMgB,KAAK,QAAQC,QAAO,WAAa7B,EAAYyB,IAAG,8BACtDb,EAAAA,cAAAA,OAAAA,CAAMgB,KAAK,WAAWC,QAAQ,wCAC9BjB,EAAAA,cAAAA,OAAAA,CAAMkB,QAAQ,UACdlB,EAAAA,cAAAA,OAAAA,CAAM,aAAW,kBAAkBiB,QAAQ,YAC1C,C","sources":["webpack://tech-far-hub/./src/pages/template-tag.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport SiteLayout from \"../components/site-layout\";\nimport type { PageProps } from \"gatsby\";\nimport { Card, CardBody, CardFooter, CardHeader } from \"@trussworks/react-uswds\";\nimport { Hyperlink } from \"../components/hyperlink\";\n\ninterface ITagPageContext {\n  tag: string;\n  pagePath: string;\n}\n\nconst TagPageTemplate: React.FC<PageProps<Queries.TagPageQueryQuery, ITagPageContext>> = ({\n  data,\n  pageContext,\n}: PageProps<Queries.TagPageQueryQuery, ITagPageContext>) => {\n  const relatedPages = data.pages.nodes.map((node) => {\n    let href: string;\n    if (node.frontmatter && node.parent) {\n      if (node.frontmatter.link) {\n        href = node.frontmatter.link;\n      } else {\n        const slug = node.frontmatter.slug === \"index\" ? \"\" : node.frontmatter.slug;\n        let path = \"relativeDirectory\" in node.parent ? node.parent.relativeDirectory : \"\";\n        href = `/${path}/${slug}/`;\n      }\n      return (\n        <Card>\n          <CardHeader>\n            <h2>\n              <Hyperlink href={href}>{node.frontmatter?.heading}</Hyperlink>\n            </h2>\n          </CardHeader>\n          <CardBody>{node.frontmatter?.promo_description}</CardBody>\n          <CardFooter>\n            <Hyperlink href={href} className=\"usa-button\">\n              Read More\n            </Hyperlink>\n          </CardFooter>\n        </Card>\n      );\n    }\n  });\n  return (\n    <SiteLayout pagePath={pageContext.pagePath}>\n      <>\n        <h1>Tagged: {pageContext.tag}</h1>\n        {relatedPages}\n      </>\n    </SiteLayout>\n  );\n};\n\nexport default TagPageTemplate;\nexport const query = graphql`\n  query TagPageQuery($tag: String) {\n    pages: allMdx(filter: { frontmatter: { tags: { eq: $tag } } }) {\n      nodes {\n        frontmatter {\n          slug\n          heading\n          promo_description\n          link\n        }\n        id\n        parent {\n          ... on File {\n            id\n            name\n            relativeDirectory\n            relativePath\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC<Queries.TagPageQueryQuery, ITagPageContext> = ({\n  pageContext,\n}: {\n  pageContext: ITagPageContext;\n}) => {\n  return (\n    <>\n      <title>Pages Tagged: {pageContext.tag} | TechFAR Hub | USDS.gov</title>\n      <meta name=\"title\" content={`Tagged: ${pageContext.tag} | TechFAR Hub | USDS.gov`} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta charSet=\"utf-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    </>\n  );\n};\n"],"names":["_ref","data","pageContext","relatedPages","pages","nodes","map","node","href","frontmatter","parent","link","slug","relativeDirectory","React","Card","CardHeader","Hyperlink","_node$frontmatter","heading","CardBody","_node$frontmatter2","promo_description","CardFooter","className","SiteLayout","pagePath","tag","Head","_ref2","name","content","charSet"],"sourceRoot":""}